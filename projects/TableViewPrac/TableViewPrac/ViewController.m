//
//  ViewController.m
//  TableViewPrac
//
//  Created by 박종찬 on 2017. 2. 16..
//  Copyright © 2017년 Jongchan Park. All rights reserved.
//

#import "ViewController.h"
#import "DetailViewController.h"
#import "CustomTableViewCell.h"

@interface ViewController ()
<UITableViewDelegate, UITableViewDataSource>



@property UITableView *tableView;
@property NSArray *dataArray_gen1;
@property NSArray *dataArray_gen2;
@property NSArray *description_gen1;

@end

@implementation ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.tableView = [[UITableView alloc] initWithFrame:CGRectMake(0, 0, self.view.frame.size.width, self.view.frame.size.height) style:UITableViewStylePlain];
    self.tableView.delegate = self;
    self.tableView.dataSource = self;
    
    self.title = @"PokéDex";
    
    [self.view addSubview:self.tableView];
    
    NSLog(@"viewDidLoad");
    
    
    
    self.description_gen1 = @[
         @"양지에서 낮잠 자는 모습을 볼 수 있다. 태양의 빛을 많이 받으면 등의 씨앗이 크게 자란다.",
         @"꽃봉오리를 지탱하기 위해 하반신이 강해진다. 양지에서 가만히 있는 시간이 길어지면 드디어 커다란 꽃이 필 때다.",
         @"충분한 영양분과 태양의 빛이 꽃의 색을 선명하게 만든다고 한다. 꽃의 향기는 사람의 마음을 치유한다.",
         @"꼬리의 불꽃은 기분을 표현한다. 즐거울 때는 흔들흔들 불꽃이 흔들리고 화가 났을 때는 활활 맹렬히 불타오른다.",
         @"날카로운 발톱으로 봐주지 않고 때려눕힌다. 강한 적을 만나면 기분이 고양되며 꼬리의 불꽃이 푸르스름하게 불타오른다.",
         @"강한 상대를 찾아 하늘을 날아다닌다. 무엇이든 다 녹여버리는 고열의 불꽃을 자신보다 약한 자에게 들이대지 않는다.",
         @"등껍질의 역할은 몸을 지키는 것뿐만이 아니다. 둥그런 모양과 표면의 홈이 물의 저항을 줄여서 빠르게 헤엄칠 수 있다.",
         @"푹신한 털로 덮인 큰 꼬리는 오래 살수록 깊은 색으로 변한다. 등껍질의 상처는 강자임을 증명한다.",
         @"등껍질의 분사구로 하는 조준은 정확하다. 물 탄환으로 50m 떨어진 빈 캔을 명중시킬 수 있다.",
         @"몸보다 커다란 잎사귀를 순식간에 먹어치울 정도의 식욕을 지녔다. 더듬이로 강렬한 냄새를 피운다.",
         @"몸의 껍질은 철판처럼 단단하다. 움직임이 적은 것은 껍질 안에서 부드러운 몸이 진화 준비를 하고 있어서다.",
         @"맛있는 꽃의 꿀을 찾는 능력이 뛰어나서 사는 곳에서 10km 떨어진 장소에 핀 꽃에서 꿀을 모아 옮긴다.",
         @"굉장히 예민한 후각을 지니고 있다. 좋아하는 잎사귀인지 싫어하는 잎사귀인지 크고 빨간 코로 냄새 맡아 구별한다.",
         @"거의 움직이지 않고 나무에 매달려 있지만 내부는 진화 준비로 굉장히 바쁜 상태다. 그 증거로 몸이 뜨거워져 있다.",
         @"영역에 대한 집착이 매우 강해서 독침붕이 사는 곳에는 가까이 가지 않는 것이 신상에 좋다. 화나면 집단으로 습격해 온다.",
         @"영역에 대한 집착이 매우 강해서 독침붕이 사는 곳에는 가까이 가지 않는 것이 신상에 좋다. 화나면 집단으로 습격해 온다.",
         @"넓은 영역을 날며 순찰한다. 영역을 침범하는 상대는 용서하지 않는다. 날카로운 발톱으로 철저히 혼내준다.",
         @"아름답게 윤이 나는 깃털을 가진 포켓몬이다. 머리 깃털의 아름다움에 마음을 빼앗겨 피죤투를 기르는 트레이너도 많다.",
         @"경계심이 매우 강해서 자고 있을 때도 귀를 움직여 주변의 소리를 듣고 있다. 어디에든 자리를 잡고 둥지를 만든다.",
         @"튼튼한 이빨은 계속 자라기 때문에 바위나 큰 나무를 갉아서 갈아낸다. 집의 벽을 갉아 놓기도 한다.",
         @"큰 울음소리는 1km 밖까지 도달한다. 여기저기에서 높은 울음소리가 들릴 때는 동료에게 위험을 알리고 있는 신호다.",
         @"긴 목과 부리는 땅이나 물 안에 있는 먹이를 잡기 편리하다. 가늘고 긴 부리로 능숙히 집는다.",
         @"빙빙 몸을 말고 쉬고 있는 것은 어떤 방향에서 적이 습격해 와도 빠르게 머리를 틀어 위협할 수 있기 때문이다.",
         @"조이는 힘이 매우 강력하다. 드럼통도 납작하게 짜부라트린다. 휘감기면 도망가는 것이 불가능하다.",
         @"뺨의 전기 주머니에 있는 전기는 한밤중 자는 동안 축적되는 것 같다. 잠이 덜 깨서 방전하기도 한다. 처음 보는 것에게는 전격을 맞춘다. 새까맣게 탄 나무열매가 떨어져 있다는 것은 전격의 세기를 조절하지 못했다는 증거다.",
         @"약한 전기를 온몸에서 발산하고 있기 때문에 어두운 곳에서는 희미하게 빛난다. 꼬리를 땅에 박고 전기를 흘려보낸다.",
         @"바싹바싹 마른 피부는 매우 단단해서 몸을 둥글게 말면 어떤 공격도 튕겨낸다. 밤에는 사막의 모래에 들어가 잠잔다.",
         @"등을 둥그렇게 말면 뾰족뾰족한 공 같다. 가시에 찔려 풀죽은 상대에게 덤벼들어 날카로운 발톱으로 박박 할퀴어 놓는다.",
         @"작은 몸을 지키기 위해 강력한 독침이 발달한 것이라 여겨진다. 화가 나면 뿔 끝에서 맹독이 나온다.",
         @"동료나 가족과 함께일 때는 서로 상처 입히지 않도록 가시를 세우지 않는다. 동료와 떨어지면 불안해하는 것 같다.",
         @"단단한 비늘로 뒤덮인 몸을 부딪쳐서 상대를 튕겨내는 공격이 특기다. 자식을 지킬 때 가장 강하다.",
         @"귀를 움직이는 근육이 발달되어 있어서 어떤 방향으로든 자유로이 귀를 움직일 수 있다. 희미한 소리도 빠트리지 않고 듣는 포켓몬이다.",
         @"다이아몬드보다 단단한 뿔을 지녔다. 적의 기척을 느끼면 등에 달린 가시를 일제히 세우고 전력을 다해 맞선다.",
         @"두꺼운 꼬리는 한 번 휘두르면 튼튼한 철탑도 꺾어 버리는 엄청난 파괴력을 지녔다. 한 번 날뛰기 시작하면 손쓸 수 없다.",
         @"보름달 밤에는 기운차게 논다. 동틀 녁에 지친 삐삐들은 조용한 산속에서 동료와 바짝 붙어 잠잔다.",
         @"날개를 사용하여 날아가듯 뛰어간다. 물 위를 걷는 것도 할 수 있다. 조용한 달밤에 호수를 걷는다.",
         @"몸 안에서 항상 불꽃이 타고 있다. 낮에 기온이 올라가면 체온도 올라가기 때문에 입으로 불꽃을 빼낸다.",
         @"성스러운 힘을 지닌 9명의 신선이 합체하여 태어났다는 전설이 있다. 지능이 높아서 사람의 말을 이해한다.",
         @"목소리의 파장을 자유로이 바꿀 수 있는 성대가 있어서 상대가 가장 졸리게 되는 파장으로 노래를 부를 수 있다.",
         @"크고 동그란 눈동자 표면에는 항상 얇은 눈물 막이 쳐져 있다. 먼지가 들어가도 바로 씻겨 나간다.",
         @"낮에 어두운 곳에서 가만히 있는 것은 긴 시간 동안 햇빛을 받으면 전신에 가벼운 화상을 입기 때문이다.",
         @"생물의 혈액을 매우 좋아한다. 특히 한밤중에 활동하는 경우가 많으며 생피를 찾아 밤하늘을 날아다닌다.",
         @"낮에 땅속에 몸을 묻고 땅의 영양을 전신으로 빨아올린다. 비옥한 땅일수록 잎사귀에 윤이 난다고 한다.",
         @"위험을 느끼면 입술에서 내는 구린 냄새가 더 강해지지만 마음이 평안할 때는 구린 냄새를 내지 않는다.",
         @"세계에서 제일 큰 꽃잎으로 먹이를 유인하여 독 꽃가루를 끼얹는다. 움직이지 못하게 된 먹이를 잡아먹는다.",
         @"파라스로부터 양분을 빨아들여 자란 버섯은 동충하초라고 불리고 있다. 장수의 약이 되는 귀중한 버섯이다.",
         @"파라섹트는 집단으로 큰 나무의 밑동에 붙어 영양을 빨아들인다. 말라버리면 일제히 다른 나무로 이동한다.",
         @"몸을 지키기 위해 가늘고 딱딱한 털이 전신을 둘러싸게 됐다고 전해진다. 작은 먹잇감도 놓치지 않는 눈을 가졌다.",
         @"야행성으로 밤에 활동을 시작한다. 가로등 빛에 이끌려 모여든 작은 벌레를 즐겨 먹는다.",
         @"농가 대부분이 디그다를 기르고 있다. 디그다가 구멍을 판 땅은 적당히 일궈져 있어 맛있는 채소가 재배되기 때문이다.",
         @"본래 하나의 몸에서 세쌍둥이가 된 것이라 모두 생각하는 것이 같다. 힘을 모아 끝없이 파나간다.",
         @"날카로운 발톱을 집어넣고 살금살금 발소리를 내지 않고 걸을 수 있다. 반짝반짝 빛나는 동전을 왠지 모르지만 매우 좋아한다.",
         @"튼튼한 6가닥의 수염은 공기의 움직임으로 주변의 상태를 파악하는 역할을 한다. 수염을 잡히면 얌전해진다.",
         @"이상한 힘을 발휘하는 고라파덕에게서 잠들어 있을 때만 발산되는 뇌파가 관측되어 학회에서 화제가 되었다.",
         @"헤엄치는 스피드는 포켓몬 중 제일이다. 태풍으로 거칠어진 바다라도 문제없다. 난파선에서 사람을 구해내는 일도 있다.",
         @"몸이 떨리며 콧김이 거칠어지면 화를 낼 조짐이지만 순식간에 격렬하게 화를 내기 때문에 도망갈 틈이 없다.",
         @"격렬하게 화를 내면 혈액순환이 좋아져 근육의 힘을 강하게 만든다. 단 머리 회전은 느려진다.",
         @"후각이 뛰어나서 한 번 맡은 냄새는 무슨 일이 있어도 절대 잊지 않는다. 상대의 기분을 냄새로 감지한다.",
         @"10000km 거리를 하루 만에 달려간다고 전해지는 매우 빠른 포켓몬이다. 체내에서 불타오르는 불꽃이 파워가 된다.",
         @"소용돌이 모양인 내장이 비칠 정도로 얇은 피부이지만 날카로운 이빨을 튕겨내는 탄력을 지니고 있다.",
         @"항상 몸의 표면이 액체로 미끈미끈하게 젖어 있어서 적에게 붙잡혀도 미끄덩 빠져나와 도망갈 수 있다.",
         @"강인하게 발달한 근육은 아무리 운동해도 지치는 일이 없다. 태평양도 가볍게 횡단할 수 있을 정도다.",
         @"매일 18시간을 자지 않으면 수면 부족으로 초능력을 사용할 수 없게 된다. 습격당하면 잠든 채로 순간이동하여 도망간다.",
         @"은 숟가락은 알파파를 높여준다. 숟가락이 없으면 평상시의 반밖에 초능력을 사용할 수 없게 된다고 한다.",
         @"뇌가 점점 커져서 목으로는 지탱할 수 없을 만큼 머리가 무거워졌다. 초능력으로 머리를 지탱하고 있다.",
         @"데구리를 들어 올려 몸을 단련한다. 모든 격투기를 마스터하기 위해 전 세계를 여행하는 알통몬도 있다.",
         @"힘이 많이 드는 인간의 일을 도와주며 매일 몸을 단련하는 포켓몬이다. 쉬는 날에는 산야에서 몸을 단련한다.",
         @"무엇이든 내던질 수 있는 파워를 지녔으나 세밀한 작업을 하면 팔이 얽히고 만다. 생각하기보다 몸이 먼저 움직인다.",
         @"가늘고 유연한 몸은 아무리 강한 공격이라도 휘어져 피할 수 있다. 입에서 철도 녹일 수 있는 액체가 나온다.",
         @"밤이 되면 엉덩이의 갈고리를 나뭇가지에 걸고 매달려서 잠든다. 잠버릇이 나쁘면 아침에 떨어져 있다.",
         @"머리에 달린 긴 덩굴을 작은 생물처럼 움직여서 먹이를 유인한다. 가까이 왔을 때 덥석 한 번에 삼킨다.",
         @"몸 대부분이 물로 되어 있어 바다에서 나오면 바싹 말라버린다. 말라버렸을 때는 바다로 돌려보내 주자.",
         @"자유롭게 늘었다 줄었다 하는 촉수로 먹이를 휘감아 맹독을 주입해 약하게 만든다. 한 번에 80마리의 먹이를 잡는다.",
         @"땅에 반쯤 박혀서 푹 잠잔다. 등산 중인 사람에게 밟혀도 전혀 깨지 않는다. 아침에 먹이를 찾아 언덕을 굴러 내려온다",
         @"산기슭부터 산 정상까지 올라가는 동안 매우 좋아하는 바위를 으득으득 먹는다. 정상에 도달하면 다시 굴러 내려온다.",
         @"산의 경사면에 파놓은 홈은 굴러 내려오는 딱구리가 민가에 부딪히지 않게 하기 위한 코스로 되어 있다.",
         @"막 태어나서는 겨우 설 수 있는 정도지만 넘어지면서 부모의 뒤를 쫓아다니는 동안 하반신이 튼튼하게 자라난다.",
         @"평상시에는 느긋하게 들판을 뛰어다니지만 한 번 마음먹으면 갈기의 불꽃을 불태우며 시속 240km로 달린다.",
         @"꼬리를 강에 넣고 먹이를 낚지만 이윽고 무엇을 하고 있었는지 잊고 강변에 엎드려 누운 채로 하루를 보낸다.",
         @"셀러가 물고 있어서 꼬리로 먹이를 낚을 수 없게 된 야도란은 마지못해 물속을 헤엄쳐 먹이를 잡고 있다.",
         @"전선에 들러붙어 전기를 먹고 있다. 정전되면 누전차단기를 살펴보자. 코일이 빽빽이 들러붙어 있을지도 모른다.",
         @"강한 자력으로 기계를 망가트리기 때문에 큰 마을에서는 사이렌을 울려 레어코일의 대량 발생을 알린다.",
         @"가지고 있는 식물의 줄기에도 좋은 것과 그렇지 않은 것이 있는 듯하여 파오리들이 줄기를 둘러싸고 싸우는 일도 있다.",
         @"2개의 머리가 동시에 잠드는 일은 없다. 잠을 잘 때에는 적에게 습격당하지 않도록 교대로 망을 보고 있기 때문이다.",
         @"3개의 머리가 서로 다른 방향을 향하고 있을 때는 경계 중인 증거다. 섣불리 가까이 가면 부리에 쪼인다.심장과 폐도 3개라서 숨이 가빠지지 않으며 먼 거리를 달릴 수 있다.",
         @"얼음으로 뒤덮인 바다에서 먹이를 잡는다. 숨을 쉴 때는 머리의 돌출된 부분으로 얼음을 깨고 바다 밖으로 얼굴을 내민다.",
         @"차가운 얼음 위에서 자는 것을 매우 좋아한다. 옛날에 빙산에서 자는 모습을 본 뱃사람이 인어로 착각했다.",
         @"흐물흐물 물렁물렁한 몸은 아무리 좁은 틈이라도 파고들어 갈 수 있다. 하수관에 들어가 지저분한 물을 마신다.",
         @"몸에서 배어 나오는 체액은 코를 찌를 정도로 강렬한 냄새를 뿜는다. 한 방울로 수영장의 물이 탁해지고 냄새가 난다.",
         @"밤이 되면 큰 혀로 해저의 모래에 구멍을 뚫고 그 안에서 잔다. 혀를 내민 채로 껍질을 닫고 잠든다.",
         @"들이마신 바닷물을 뒤쪽으로 기운차게 뿜어내서 바닷속을 헤엄친다. 같은 방법으로 가시도 발사한다.",
         @"강풍을 맞으면 가스로 된 몸은 금세 날려져서 작아진다. 바람을 피해 고오스가 처마 밑에 모인다.",
         @"어둠 속에서 나타나는 고우스트가 손짓으로 불러도 절대 가까이 가면 안 된다. 날름 핥아져 생명을 빨린다.",
         @"한밤중 가로등 빛에 생겨난 그림자가 자신을 앞질러 가는 것은 팬텀이 그림자인 척하며 뛰어가기 때문이다.",
         @"뇌에 자석이 있어서 땅속을 파고 나가도 방향을 틀리지 않는다. 나이를 먹을수록 몸이 둥그스름해진다.",
         @"잠들었을 때 너의 코가 근질근질하다면 슬리프가 머리맡에 서서 콧구멍을 통해 꿈을 먹으려고 하는 신호다.",
         @"손에 쥐고 있는 추의 움직임과 반짝임이 상대를 깊은 최면 상태에 빠트린다. 먹이를 찾으며 추를 손질하고 있다.",
         @"모래 해변에 구멍을 뚫고 거기서 살고 있다. 먹이가 적은 모래 해변에서는 자리 확보를 위해 다투는 크랩들을 볼 수 있다.",
         @"킹크랩은 거대한 집게를 휘둘러 동료 간에 신호를 보내지만 집게가 무거워서 곧 지쳐버린다.",
         @"작은 충격에도 바로 폭발한다. 몬스터볼에 강력한 전류를 가했을 때 태어났다는 소문이 돌고 있다.",
         @"공기 중의 전기 에너지를 먹는다. 번개가 치는 날에는 전기를 너무 먹은 붐볼이 이곳저곳에서 대폭발한다.",
         @"동료애가 강한 여섯 알은 서로 끌어당기며 빙글빙글 회전하고 있다. 껍질의 금이 늘어나면 진화가 가까워진 것.",
         @"남쪽 나라 태생인 나시의 머리는 강한 햇빛을 잔뜩 받고 점점 자라 땅에 떨어지면 아라리가 된다고 한다.",
         @"두 번 다시 만나지 못하는 어미의 모습을 보름달에서 발견하고 울음소리를 낸다. 뒤집어쓰고 있는 뼈의 얼룩은 눈물 자국이다.",
         @"어미를 만날 수 없는 슬픔을 극복한 탕구리가 늠름하게 진화한 모습이다. 단련된 마음은 간단히 꺾이지 않는다.",
         @"자유롭게 신축되는 다리로 강렬한 킥을 날려 상대를 발로 차 쓰러뜨린다. 싸운 뒤에 지친 다리를 주물러 풀어준다.",
         @"세계 챔피언을 목표했던 복서의 혼이 깃들었다고 하는 홍수몬은 불굴의 정신으로 절대 지쳐 쓰러지지 않는다.",
         @"처음 본 것은 반드시 핥아본다. 혀의 감촉과 맛으로 기억해두는 것이다. 하지만 시큼한 것을 핥는 것은 조금 꺼린다.",
         @"자극받으면 가스의 독소가 강해져 몸의 이곳저곳에서 강하게 내뿜는다. 동그랗게 부풀어 오른 후 대폭발한다.",
         @"부패한 음식물 쓰레기에서 나온 가스를 매우 좋아한다. 청소하지 않는 집에서 눌러살며 가족이 모두 잠든 한밤중에 쓰레기통을 뒤진다.",
         @"오로지 곧장 돌진하여 부순다. 강철 덩어리에 부딪혀도 멀쩡하지만 하루가 지나면 아픔을 조금 느낀다.",
         @"드릴처럼 쓰는 뿔로 암석을 파괴한다. 마그마가 뿜어져 나오기도 하지만 갑옷 같은 피부는 뜨거움을 느끼지 않는다.",
         @"영양 만점인 알을 매일 낳는다. 식욕을 잃은 사람도 한 번에 먹어치울 정도로 맛있는 알이다.",
         @"적에게 붙잡히면 덩굴이 뚝 하고 끊긴다. 전혀 아프지 않기 때문에 그 틈에 도망간다. 다음 날에는 새로운 덩굴이 자란다.",
         @"캥카의 새끼가 혼자서 놀고 있어도 절대로 잡으려 하면 안 된다. 가까이 있는 부모가 격렬히 화낸다.",
         @"작은 벌레나 바위의 이끼를 먹는다. 해류가 빨라지면 꼬리로 바위나 산호를 휘감아 떠내려가지 않게 한다.",
         @"산호 가지 사이로 들어가 잠잔다. 시드라가 있는 줄 모르고 산호를 잡으려다 독가시에 찔리곤 한다.",
         @"물속에서 우아하게 나부끼는 지느러미가 매우 아름다운 포켓몬이지만 방심하고 있으면 강렬한 뿔의 일격을 당한다.",
         @"가을이 되면 암컷에게 프러포즈하기 위해 강바닥에서 춤추는 수컷을 볼 수 있다. 몸의 색이 가장 아름다운 계절이다.",
         @"여름이 끝날 무렵 밤에 모래 해변에 가면 핵이라고 불리는 기관을 붉게 빛내는 별가사리가 별처럼 보인다.",
         @"몸의 중심에 있는 핵이라 불리는 부분이 일곱 빛깔로 빛나기에 바다의 보석이라는 별명이 붙었다.",
         @"몸짓으로 눈에 보이지 않는 것이 그곳에 있다고 믿게 만드는 팬터마임의 달인이다. 있다고 믿게 만든 것은 정말로 나타난다.",
         @"눈에 보이지 않는 빠른 스피드가 양팔에 달린 낫의 날카로움을 한층 높여준다. 한 번 휘두르면 큰 나무도 두 동강 난다.",
         @"춤추는 듯한 자세로 리드미컬하게 걷는다. 그 움직임을 보고 있는 사람마저 얼떨결에 허리를 흔들 정도로 경쾌하다.",
         @"폭풍이 오면 나무 위처럼 벼락이 떨어질 만한 높은 장소로 앞다투어 올라간다. 피뢰침 대용으로 삼는 마을도 있다.",
         @"싸우게 되면 몸에서 작열하는 불꽃을 뿜어내 상대를 위협한다. 그 열풍으로 주변의 초목도 불태운다.",
         @"자신의 몸무게 두 배나 되는 상대를 뿔로 집어 가볍게 들어 올리는 괴력을 지녔다. 추운 곳에서는 몸의 움직임이 둔해진다.",
         @"항상 날뛰지 않으면 성에 차지 않는다. 싸울 상대가 없을 때는 큰 나무를 들이받아 쓰러트리고 맘을 가라앉힌다.",
         @"튀어 오르기만 하는 한심한 포켓몬이다. 왜 튀어 오르는지 조사한 연구자가 있을 정도로 무조건 튀고 튀고 튀어 오르기만 한다.",
         @"잉어킹에서 갸라도스로 진화할 때 뇌세포의 구조가 재구성되기 때문에 성격이 난폭해진다고 전해진다.",
         @"사람이 멸종의 위기로 몰아갔다. 석양이 내리면 수가 줄어든 동료를 찾아 슬픈 목소리로 노래한다고 한다.",
         @"몸의 세포를 재구성하여 변신한다. 전에 봤던 것을 기억해내면서 바뀌면 조금 다른 형태가 되어버린다.",
         @"사는 환경에 따라 돌연변이하는 불안정한 유전자를 지닌 포켓몬이다. 돌의 방사선이 진화를 일으킨다.",
         @"돌연변이로 인해 물속에서 생활할 수 있도록 지느러미와 아가미가 생겨났다. 물을 자유로이 조종하는 힘을 지녔다.",
         @"세포에서 나오는 약한 전기를 털의 정전기로 증폭시켜 번개를 떨어트린다. 곤두세운 털은 전기를 띤 바늘이다.",
         @"푹신한 털은 높이 오른 체온을 공기 중으로 발산하여 낮추는 기능을 지녔다. 체온은 최고 900도까지 올라간다.",
         @"전신을 프로그램 데이터로 되돌려 전자 공간에 들어갈 수 있다. 복사 방지가 되어 있어 복사할 수 없다.",
         @"먼 옛날 절멸했으나 인간의 손에서 화석으로부터 부활한 포켓몬 중 하나이다. 적에게 습격당하면 껍질에 숨는다.",
         @"촉수를 조종해서 먹이를 붙잡는다. 껍질이 너무 커진 걸로 인해 움직임이 둔해져서 절멸했다고 생각 되어 진다.",
         @"화석에서 부활한 포켓몬이지만 드물게 살아 있는 투구를 발견할 수 있다. 그 모습은 3억 년 동안 변치 않았다.",
         @"물속을 헤엄쳐 먹이를 잡았었다. 물에서의 생활을 지나 땅에서 살 수 있도록 아가미나 다리 등이 변화되기 시작했다.",
         @"호박에서 추출한 유전자를 재생하여 부활한 공룡시대의 포켓몬이다. 하늘의 왕이었다고 상상된다.",
         @"먹고 자는 것을 반복하다 하루가 끝난다. 큰 배 위를 놀이터로 삼은 아이들이 있을 정도로 얌전한 포켓몬이다.",
         @"얼음을 조종하는 전설의 새포켓몬이다. 날개짓하면 공기가 차갑게 식기 때문에 프리져가 날면 눈이 온다고 전해진다.",
         @"전기를 조종하는 전설의 새 포켓몬이다. 평상시는 번개구름 속에서 지낸다. 번개를 맞으면 힘이 솟아난다.",
         @"불꽃을 조종하는 전설의 새 포켓몬이다. 몸이 상처 입으면 분화구의 마그마에 들어가 전신을 불태워 상처를 치료한다고 한다.",
         @"미뇽이 탈피를 반복하는 것은 몸속에서 생명 에너지가 점점 부풀어 올라 억제할 수 없게 되기 때문이다.",
         @"큰 에너지를 몸에 모으고 있다. 목과 꼬리의 수정에서 에너지를 발산하여 주변 날씨를 바꾼다고 한다.",
         @"16시간 만에 지구를 한 바퀴 돌 수 있다. 폭풍으로 난파 직전인 배를 발견하면 육지까지 유도하는 상냥한 포켓몬이다.",
         @"유전자조작을 통해 만들어진 포켓몬이다. 인간은 과학의 힘으로 몸은 만들었지만 상냥한 마음을 만들 수는 없었다.",
         @"모든 포켓몬의 유전자를 가졌다고 한다. 자유자재로 모습을 숨길수 있어서 사람에게 가까이 다가가도 절대 들키지 않는다."
          

                              ];
    
    self.dataArray_gen1 = @[@"이상해씨",
            @"이상해풀",
            @"이상해꽃",
            @"파이리",
            @"리자드",
            @"리자몽",
            @"꼬부기",
            @"어니부기",
            @"거북왕",
            @"캐터피",
            @"단데기",
            @"버터플",
            @"뿔충이",
            @"딱충이",
            @"독침붕",
            @"구구",
            @"피죤",
            @"피죤투",
            @"꼬렛",
            @"레트라",
            @"깨비참",
            @"깨비드릴조",
            @"아보",
            @"아보크",
            @"피카츄",
            @"라이츄",
            @"모래두지",
            @"고지",
            @"니드런♀",
            @"니드리나",
            @"니드퀸",
            @"니드런♂",
            @"니드리노",
            @"니드킹",
            @"삐삐",
            @"픽시",
            @"식스테일",
            @"나인테일",
            @"푸린",
            @"푸크린",
            @"주뱃",
            @"골뱃",
            @"뚜벅쵸",
            @"냄새꼬",
            @"라플레시아",
            @"파라스",
            @"파라섹트",
            @"콘팡",
            @"도나리",
            @"디그다",
            @"닥트리오",
            @"나옹",
            @"페르시온",
            @"고라파덕",
            @"골덕",
            @"망키",
            @"성원숭",
            @"가디",
            @"윈디",
            @"발챙이",
            @"슈륙챙이",
            @"강챙이",
            @"캐이시",
            @"윤겔라",
            @"후딘",
            @"알통몬",
            @"근육몬",
            @"괴력몬",
            @"모다피",
            @"우츠동",
            @"우츠보트",
            @"왕눈해",
            @"독파리",
            @"꼬마돌",
            @"데구리",
            @"딱구리",
            @"포니타",
            @"날쌩마",
            @"야돈",
            @"야도란",
            @"코일",
            @"레어코일",
            @"파오리",
            @"두두",
            @"두트리오",
            @"쥬쥬",
            @"쥬레곤",
            @"질퍽이",
            @"질뻐기",
            @"셀러",
            @"파르셀",
            @"고오스",
            @"고우스트",
            @"팬텀",
            @"롱스톤",
            @"슬리프",
            @"슬리퍼",
            @"크랩",
            @"킹크랩",
            @"찌리리공",
            @"붐볼",
            @"아라리",
            @"나시",
            @"탕구리",
            @"텅구리",
            @"시라소몬",
            @"홍수몬",
            @"내루미",
            @"또가스",
            @"또도가스",
            @"뿔카노",
            @"코뿌리",
            @"럭키",
            @"덩쿠리",
            @"캥카",
            @"쏘드라",
            @"시드라",
            @"콘치",
            @"왕콘치",
            @"별가사리",
            @"아쿠스타",
            @"마임맨",
            @"스라크",
            @"루주라",
            @"에레브",
            @"마그마",
            @"쁘사이저",
            @"켄타로스",
            @"잉어킹",
            @"갸라도스",
            @"라프라스",
            @"메타몽",
            @"이브이",
            @"샤미드",
            @"쥬피썬더",
            @"부스터",
            @"폴리곤",
            @"암나이트",
            @"암스타",
            @"투구",
            @"투구푸스",
            @"프테라",
            @"잠만보",
            @"프리져",
            @"썬더",
            @"파이어",
            @"미뇽",
            @"신뇽",
            @"망나뇽",
        @"뮤츠",
        @"뮤" ];
//    self.dataArray_gen2 = @[
//                            @"치코리타",
//                            @"베이리프",
//                            @"메가니움",
//                            @"브케인",
//                            @"마그케인",
//                            @"블레이범",
//                            @"리아코",
//                            @"엘리게이",
//                            @"장크로다일",
//                            @"꼬리선",
//                            @"다꼬리",
//                            @"부우부",
//                            @"야부엉",
//                            @"레디바",
//                            @"레디안",
//                            @"페이검",
//                            @"아리아도스",
//                            @"크로뱃",
//                            @"초라기",
//                            @"랜턴",
//                            @"피츄",
//                            @"삐",
//                            @"푸푸린",
//                            @"토게피",
//                            @"토게틱",
//                            @"네이티",
//                            @"네이티오",
//                            @"메리프",
//                            @"보송송",
//                            @"전룡",
//                            @"아르코",
//                            @"마릴",
//                            @"마릴리",
//                            @"꼬지모",
//                            @"왕구리",
//                            @"통통코",
//                            @"두코",
//                            @"솜솜코",
//                            @"에이팜",
//                            @"해너츠",
//                            @"해루미",
//                            @"왕자리",
//                            @"우파",
//                            @"누오",
//                            @"에브이",
//                            @"블래키",
//                            @"니로우",
//                            @"야도킹",
//                            @"무우마",
//                            @"안농",
//                            @"마자용",
//                            @"키링키",
//                            @"피콘",
//                            @"쏘콘",
//                            @"노고치",
//                            @"글라이거",
//                            @"강철톤",
//                            @"블루",
//                            @"그랑블루",
//                            @"침바루",
//                            @"핫삼",
//                            @"단단지",
//                            @"헤라크로스",
//                            @"포푸니",
//                            @"깜지곰",
//                            @"링곰",
//                            @"마그마그",
//                            @"마그카르고",
//                            @"꾸꾸리",
//                            @"메꾸리",
//                            @"코산호",
//                            @"총어",
//                            @"대포무노",
//                            @"딜리버드",
//                            @"만타인",
//                            @"무장조",
//                            @"델빌",
//                            @"헬가",
//                            @"킹드라",
//                            @"코코리",
//                            @"코리갑",
//                            @"폴리곤2",
//                            @"노라키",
//                            @"루브도",
//                            @"배루키",
//                            @"카포에라",
//                            @"뽀뽀라",
//                            @"에레키드",
//                            @"마그비",
//                            @"밀탱크",
//                            @"해피너스",
//                            @"라이코",
//                            @"앤테이",
//                            @"스이쿤",
//                            @"애버라스",
//                            @"데기라스",
//                            @"마기라스",
//                            @"루기아",
//                            @"칠색조",
//                            @"세레비",
//                            
//                            ];
    
    
    // Do any additional setup after loading the view, typically from a nib.
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

#pragma mark - TableView DataSource

- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section {
//    NSLog(@"numberOfRowsInSection");
    return self.dataArray_gen1.count;
}


- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView {
//    NSLog(@"numberOfSectionsInTableView");
    return 1;
}

- (UITableViewCell *)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [tableView dequeueReusableCellWithIdentifier:@"reuseId"];
    if (cell != nil) {
//        NSLog(@"dequeueReusableCell");
    } else {
        cell = [[UITableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"reuseId"];
    }
    
    cell.textLabel.text = [NSString stringWithFormat:@"%ld. %@",indexPath.row +1, self.dataArray_gen1[indexPath.row]];
    [cell.imageView setImage:[UIImage imageNamed:[NSString stringWithFormat:@"Thumbnails/thumbnail_%ld.png",indexPath.row+1]]];
    
    

    NSLog(@"cellForRowAtIndexPath %ld. %@",indexPath.row +1, self.dataArray_gen1[indexPath.row]);
    return cell;
    
}

-(void)viewWillAppear:(BOOL)animated {
    NSLog(@"viewWillAppear");
}



#pragma mark - TableView Delegate

//- (void)tableView:(UITableView *)tableView willDisplayCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath *)indexPath {
//    NSLog(@"willDisplayCell");
//}
//- (void)tableView:(UITableView *)tableView willDisplayHeaderView:(UIView *)view forSection:(NSInteger)section {
//    NSLog(@"willDisplayHeaderView");
//}
//- (void)tableView:(UITableView *)tableView willDisplayFooterView:(UIView *)view forSection:(NSInteger)section {
//    NSLog(@"willDisplayFooterView");
//}
//- (void)tableView:(UITableView *)tableView didEndDisplayingCell:(UITableViewCell *)cell forRowAtIndexPath:(NSIndexPath*)indexPath {
//    NSLog(@"didEndDisplayingCell");
//}
//- (void)tableView:(UITableView *)tableView didEndDisplayingHeaderView:(UIView *)view forSection:(NSInteger)section {
//    NSLog(@"didEndDisplayingHeaderView");
//}
//- (void)tableView:(UITableView *)tableView didEndDisplayingFooterView:(UIView *)view forSection:(NSInteger)section {
//    NSLog(@"didEndDisplayingFooterView");
//}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath {
    [self performSegueWithIdentifier:@"detail" sender:[tableView cellForRowAtIndexPath:indexPath]];
    [tableView deselectRowAtIndexPath:indexPath animated:YES];
//    NSLog(@"didSelectRowAtIndexPath");
}

- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath {
//    NSLog(@"heightForRowAtIndexPath %ld", indexPath.row);
    return 90;
}

#pragma mark - ScrollView Delegate

//- (void)scrollViewDidScroll:(UIScrollView *)scrollView {
//    NSLog(@"scrollViewDidScroll");
//}
//
//- (void)scrollViewWillBeginDragging:(UIScrollView *)scrollView {
//    NSLog(@"scrollViewWillBeginDragging");
//}
//
//- (void)scrollViewDidEndScrollingAnimation:(UIScrollView *)scrollView {
//    NSLog(@"scrollViewDidEndScrollingAnimation");
//}
//
//- (void)scrollViewWillEndDragging:(UIScrollView *)scrollView withVelocity:(CGPoint)velocity targetContentOffset:(inout CGPoint *)targetContentOffset {
//    NSLog(@"scrollViewWillEndDragging");
//}



#pragma mark - Segue

-(void)prepareForSegue:(UIStoryboardSegue *)segue sender:(id)sender {
    if ([segue.identifier isEqualToString:@"detail"]) {
        DetailViewController *detailView = segue.destinationViewController;
        NSIndexPath *indexPath = [self.tableView indexPathForCell:sender];
        detailView.title = self.dataArray_gen1[indexPath.row];
        detailView.contentsForPm = self.description_gen1[indexPath.row];
        detailView.pokemonIndex = indexPath.row + 1;
    }
}



@end
