추상화

추상화란, 객체의 공통된 속성과 행위를 추출하는 것이다. 

어떤 대상에 대하여 해결하고자 하는 문제에 관련해서 공통적인 정보만 추출해내는 것이다. 그것을 통해서 하나의 클래스를 정의하고, 객체는 그 클래스에 기반하여 만들어진다.


캡슐화

캡슐화란, 하나의 객체 안에서 속성이나 행동을 외부에 보여질 것과 안 보여질 것을 나누어 하나의 묶음으로 모아 놓는 것을 말한다. 즉 접근할 필요가 없는 것은 숨기고 (은닉화) 접근할 필요가 있는 것은 그것에 접근할 수 있는 함수를 제공함으로써, 정해진 방식으로만 접근할 수 있게 하는 것이다.


은닉화

캡슐화 과정에서 일어나는 일인데, 그 객체 밖에서 접근할 필요가 없는 프로퍼티와 함수를 캡슐 내부에 숨기는 일을 뜻한다. 비정상적으로 접근하는 것을 막아, 오류와 혼란을 줄이는 효과를 가진다.

상속

각 객체는 자신의 클래스로 만들어지고, 클래스는 트리 형식으로 특성을 상속받는다. 모든 클래스(로부터 만들어진 객체)는 최상단 루트 클래스(NSObject)로부터 그 특성을 물려받았다. 중간중간 분화되면서 어떤 것은 뷰컨트롤러로, 어떤 것은 뷰로, 또는 개발자가 정의한 완전히 새로운 무엇인가로 상속을 받으면서, 점점 각자의 역할에 맞게 변해 간다.

이것의 장점은 부모가 하는 행동은 기본적으로 자식 클래스가(덮어쓰지 않는 한) 모두 물려받는다는 점이다. 대표적으로 initialization 같이, 모든 클래스에게 필요한 것은 루트 클래스가 가지고 있고, 각자 그 행동을 물려받아 나름대로 변형해서 지원한다. 

다형성

자식 클래스가 부모 클래스의 행동을 자식 클래스에서 필요에 따라 변형하여 사용하는 것.
예를 들어 화석연료 방식의 Car라는 클래스에서 분화시켜 ElectronicCar 를 만들었다면, ‘refueling’이라는 함수에 대해 가솔린 보충이 아니라 배터리 충전으로 대응해야 할 것이다. 나머지 자동차의 특정(운전 방식 등)은 그대로 상속하여 사용하되, 해당 부분만 변경함으로 해서, 가솔린차를 사용하듯 똑같이 전기차를 사용할 수 있다.